version: 2.1
orbs:
  python: circleci/python@2.1.1
  codecov: codecov/codecov@1.0.2
_test-body: &test-body
    resource_class: small
    steps:
      - checkout
      - run:
          name: poetry upgrade
          command: poetry self update 2.0.1
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: build
          command: poetry build
      - run:
          name: Run pylint
          command: poetry run pylint kenkenpa/* --exit-zero
      - run:
          name: Run tests
          command: poetry run pytest --cov=kenkenpa --cov-report=xml
jobs:
  test-3-10: 
    <<: *test-body
    docker:
      - image: cimg/python:3.10
  test-3-11: 
    <<: *test-body
    docker:
      - image: cimg/python:3.11
  test-3-12: 
    <<: *test-body
    docker:
      - image: cimg/python:3.12
  test-3-13: 
    <<: *test-body
    docker:
      - image: cimg/python:3.13
  build-and-test:
    resource_class: small
    docker:
      - image: cimg/python:3.12.4
    steps:
      - checkout
      - run:
          name: poetry upgrade
          command: poetry self update 2.0.1
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: build
          command: poetry build
      - run:
          name: Run pylint
          command: poetry run pylint kenkenpa/* --exit-zero
      - run:
          name: Run tests
          command: poetry run pytest --cov=kenkenpa --cov-report=xml
      - codecov/upload:
          file: ./coverage.xml
  deploy-test:
    resource_class: small
    docker:
      - image: cimg/python:3.12.4
    steps:
      - checkout
      - run:
          name: poetry upgrade
          command: poetry self update 2.0.1
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: poetry TestPyPi 
          command: poetry config repositories.testpypi https://test.pypi.org/legacy/
      - run:
          name: poetry TestPyPi TOKEN
          command: poetry config pypi-token.testpypi $TEST_PYPI_API_TOKEN
      - run:
          name: build
          command: poetry build
      - run:
          name: deploy
          command: poetry publish -r testpypi
  deploy:
    resource_class: small
    docker:
      - image: cimg/python:3.12.4
    steps:
      - checkout
      - run:
          name: poetry upgrade
          command: poetry self update 2.0.1
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: poetry PyPi TOKEN
          command: poetry config pypi-token.pypi $PYPI_TOKEN
      - run:
          name: build
          command: poetry build
      - run:
          name: deploy
          command: poetry publish
      - run:
          name: tag
          command: export CURRENT_VERSION=v$(poetry version --short);git tag $CURRENT_VERSION;git push origin $CURRENT_VERSION
workflows:
  build:
    jobs:
      - build-and-test
      - pause_workflow:
          requires:
            - build-and-test
          type: approval
          filters:
            branches:
              only:
                - main
      - deploy-test:
          requires:
            - pause_workflow
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - deploy-test
          filters:
            branches:
              only:
                - main
  multi-version-test:
    jobs:
      - test-3-10:
          filters:
            branches:
              ignore:
                - main
      - test-3-11:
          filters:
            branches:
              ignore:
                - main
      - test-3-12:
          filters:
            branches:
              ignore:
                - main
      - test-3-13:
          filters:
            branches:
              ignore:
                - main